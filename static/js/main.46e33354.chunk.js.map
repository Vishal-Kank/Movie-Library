{"version":3,"sources":["APIKey.js","component/layout/spinner.gif","component/layout/Navbar.js","component/layout/Footer.js","actions/searchAction.js","actions/types.js","component/home/SearchForm.js","component/home/MovieCard.js","component/home/MoviesContainer.js","component/layout/Spinner.js","component/home/Landing.js","component/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","to","id","Component","Footer","href","target","rel","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","this","name","placeholder","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","MovieCard","movie","src","Poster","alt","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Spinner","spinner","style","width","margin","display","Landing","loading","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46e33354.chunk.js","sourcesContent":["module.exports = {\r\n    APIKey: '2a575de'\r\n};","module.exports = __webpack_public_path__ + \"static/media/spinner.9e917f15.gif\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-header\">\r\n                        <Link className=\"navbar-brand\" to=\"/\">MovieSeriesInfo</Link>\r\n                    </div>\r\n\r\n                    <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                            <i className=\"fab fa-imdb fa-4x\" id=\"imdb-logo\" />\r\n                        </li>\r\n\r\n                        <li className=\"nav-item d-inline-block mr-4 \">\r\n                            <i className=\"fab fa-react fa-4x\" id=\"react-logo\" />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n\r\n                <div className=\"footer p-3 mt-5 mb-4 text-center bg-dark text-light\">\r\n                    Developed By :<span className=\"text-warning font-weigth-normal\"> Vishal Kank</span>\r\n                    , Using <i className=\"fab fa-react\" /> React Js & Redux Js integrated with external movies data API\r\n                            <a href=\"http://www.omdbapi.com/\" target=\"blank\" rel=\"noopener noreferrer\"> OMDB</a>\r\n                </div>\r\n\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\r\nimport axios from 'axios';\r\nimport { APIKey } from '../APIKey';\r\n\r\nexport const searchMovie = text => (dispatch) => {\r\n    dispatch({\r\n        type: SEARCH_MOVIE,\r\n        payload: text\r\n    });\r\n};\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n        .then(response => dispatch({\r\n            type: FETCH_MOVIES,\r\n            payload: response.data\r\n        }))\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n        .then(response => dispatch({\r\n            type: FETCH_MOVIE,\r\n            payload: response.data\r\n        }))\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n}","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const LOADING = 'LOADING';","import React, { Component } from 'react';\r\nimport { searchMovie, fetchMovies, setLoading } from '../../actions/searchAction';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchForm extends Component {\r\n\r\n    onChange = e => {\r\n        this.props.searchMovie(e.target.value);\r\n    }\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.fetchMovies(this.props.text);\r\n        this.props.setLoading();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4 mb-3\">\r\n                        <i className=\"fa fa-search\" />Search for a Movie, TV series ..\r\n                    </h1>\r\n                    <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n                        <input className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"searchText\"\r\n                            placeholder=\"Search Movies, TV series ...\"\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <button className=\"btn btn-primary btn-bg mt-3\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    text: state.movies.text\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchMovie, fetchMovies, setLoading })(SearchForm);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class MovieCard extends Component {\r\n    render() {\r\n        const { movie } = this.props;\r\n        return (\r\n            <div className='col-md-3 mb-5'>\r\n                <div className='card card-body bg-dark text-center h-100 '>\r\n                    <img className='w-100 mb-2' src={movie.Poster} alt='Movie-Cover' />\r\n                    <h5 className='text-light card-title'>{movie.Title} - {movie.Year}</h5>\r\n                    <Link className='btn btn-primary' to={'/movie/' + movie.imdbID}>\r\n                        Movie Details\r\n                        <i className='fas fa-chevron-right' />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MovieCard from './MovieCard';\r\n\r\nclass MoviesContainer extends Component {\r\n    render() {\r\n        const { movies } = this.props;\r\n        let content = '';\r\n        content = movies.Response === 'True' ? movies.Search.map((movie, index) => <MovieCard key={index} movie={movie} />) : null;\r\n        return (\r\n            <div className='row'>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.movies.movies\r\n})\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);","import React from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div>\r\n            <img\r\n                src={spinner}\r\n                style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n                alt='Loading...'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { Component } from 'react';\r\nimport SearchForm from './SearchForm';\r\nimport MoviesContainer from './MoviesContainer';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nexport class Landing extends Component {\r\n    render() {\r\n        const { loading } = this.props\r\n        return (\r\n            <div className=\"container\">\r\n                <SearchForm />\r\n                {loading ? <Spinner /> : <MoviesContainer />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { fetchMovie, setLoading } from '../../actions/searchAction';\r\n\r\nimport Spinner from '../layout/Spinner';\r\n\r\nexport class Movie extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchMovie(this.props.match.params.id) //sending movie id to fetchMovie to fetch that particular movie....\r\n        this.props.setLoading();\r\n    }\r\n    render() {\r\n        const { loading, movie } = this.props;\r\n        console.log(movie)\r\n        let movieInfo = (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-md-4 card card-body'>\r\n                        <img src={movie.Poster} className='thumbnail' alt='Poster' />\r\n                    </div>\r\n                    <div className='col-md-8'>\r\n                        <h2 className='mb-4'>{movie.Title}</h2>\r\n                        <ul className='list-group'>\r\n                            <li className='list-group-item'>\r\n                                <strong>Genre:</strong> {movie.Genre}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Released:</strong> {movie.Released}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Rated:</strong> {movie.Rated}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Director:</strong> {movie.Director}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Writer:</strong> {movie.Writer}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Actors:</strong> {movie.Actors}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='card card-body bg-dark text-light my-5'>\r\n                        <div className='col-md-12'>\r\n                            <h3>About</h3>\r\n                            {movie.Plot}\r\n                            <hr />\r\n                            <a href={'https://www.imdb.com/title/' + movie.imdbID} target='_blank' rel=\"noopener noreferrer\" className='btn btn-primary'>View on IMDB</a>\r\n                            <Link to='/' className='btn btn-default text-light'>Go Back To Search</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n        let content = loading ? <Spinner /> : movieInfo\r\n        return (\r\n            <div>{content}</div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading,\r\n    movie: state.movies.movie\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie);","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                text: action.payload,\r\n                loading: false\r\n            }\r\n        case FETCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload,\r\n                loading: false\r\n            }\r\n        case FETCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: action.payload,\r\n                loading: false\r\n            }\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n    movies: searchReducer\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navbar from './component/layout/Navbar'\nimport Footer from './component/layout/Footer';\nimport Landing from './component/home/Landing';\nimport Movie from './component/home/Movie';\n\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            <Navbar />\n            <Switch>\n              <Route exact path='/' component={Landing} />\n              <Route exact path='/movie/:id' component={Movie} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}