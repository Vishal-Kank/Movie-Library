{"version":3,"sources":["APIKey.js","component/Navbar.js","component/Footer..js","reducers/searchReducer.js","reducers/index.js","actions/types.js","store.js","component/SearchForm.js","actions/searchAction.js","component/MovieCard.js","component/MoviesContainer.js","component/Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","href","id","Component","Footer","target","initialState","text","movies","loading","movie","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","this","name","placeholder","connect","dispatch","axios","get","then","response","data","Search","catch","err","console","log","MovieCard","src","Poster","alt","Title","Year","MoviesContainer","content","length","map","index","key","Landing","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb305ffa.chunk.js","sourcesContent":["module.exports = {\r\n    APIKey: '2a575de'\r\n};","import React, { Component } from 'react';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-header\">\r\n                        <a className=\"navbar-brand  \" href=\"site.my\">MovieSeriesInfo</a>\r\n                    </div>\r\n\r\n                    <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                            <i className=\"fab fa-imdb fa-4x\" id=\"imdb-logo\" />\r\n                        </li>\r\n\r\n                        <li className=\"nav-item d-inline-block mr-4 \">\r\n                            <i className=\"fab fa-react fa-4x\" id=\"react-logo\" />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n\r\n                <div className=\"footer p-3 mt-5 mb-4 text-center bg-dark text-light\">\r\n                    Developed By :<span className=\"text-warning font-weigth-normal\"> Vishal Kank</span>\r\n                    , Using <i className=\"fab fa-react\" /> React Js & Redux Js integrated with external movies data API\r\n                            <a href=\"http://www.omdbapi.com/\" target=\"blank\"> OMDB</a>\r\n                </div>\r\n\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n","import { SEARCH_MOVIE, FETCH_MOVIES } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                text: action.payload,\r\n                loading: false\r\n            }\r\n        case FETCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n    movies: searchReducer\r\n})","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIE';","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { searchMovie, fetchMovies } from '../actions/searchAction';\r\nimport { connect } from 'react-redux';\r\n\r\nclass SearchForm extends Component {\r\n\r\n    onChange = e => {\r\n        this.props.searchMovie(e.target.value);\r\n    }\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.fetchMovies(this.props.text);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4 mb-3\">\r\n                        <i className=\"fa fa-search\" />Search for a Movie, TV series ..\r\n                    </h1>\r\n                    <form id=\"searchForm\" onSubmit={this.onSubmit}>\r\n                        <input className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"searchText\"\r\n                            placeholder=\"Search Movies, TV series ...\"\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <button className=\"btn btn-primary btn-bg mt-3\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    text: state.movies.text\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchMovie, fetchMovies })(SearchForm);","import { SEARCH_MOVIE, FETCH_MOVIES } from './types';\r\nimport axios from 'axios';\r\nimport { APIKey } from '../APIKey';\r\n\r\nexport const searchMovie = text => (dispatch) => {\r\n    dispatch({\r\n        type: SEARCH_MOVIE,\r\n        payload: text\r\n    });\r\n};\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n        .then(response => dispatch({\r\n            type: FETCH_MOVIES,\r\n            payload: response.data.Search\r\n        }))\r\n        .catch(err => console.log(err))\r\n};","import React, { Component } from 'react'\r\n\r\nexport default class MovieCard extends Component {\r\n    render() {\r\n        const { movie } = this.props;\r\n        return (\r\n            <div className='col-md-3 mb-5'>\r\n                <div className='card card-body bg-dark text-center h-100 '>\r\n                    <img className='w-100 mb-2' src={movie.Poster} alt='Movie-Cover' />\r\n                    <h5 className='text-light card-title'>{movie.Title} - {movie.Year}</h5>\r\n                    <a className='btn btn-primary' href=\"#\">\r\n                        Movie Details\r\n                        <i className='fas fa-chevron-right' />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport MovieCard from './MovieCard';\r\nclass MoviesContainer extends Component {\r\n    render() {\r\n        const { movies } = this.props;\r\n        let content = '';\r\n        content = movies.length > 0 ? movies.map((movie, index) => <MovieCard key={index} movie={movie} />) : null;\r\n        return (\r\n            <div className='row'>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.movies.movies\r\n})\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);","import React, { Component } from 'react';\r\nimport SearchForm from './SearchForm';\r\nimport MoviesContainer from './MoviesContainer';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from './Spinner';\r\nclass Landing extends Component {\r\n    render() {\r\n        const { loading } = this.props\r\n        return (\r\n            <div className=\"container border\">\r\n                <SearchForm />\r\n                {loading ? <Spinner /> : <MoviesContainer />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './component/Navbar'\nimport Footer from './component/Footer.';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport Landing from './component/Landing';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Navbar />\n        <Landing />\n        <Footer />\n      </Provider>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}